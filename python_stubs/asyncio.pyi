from collections.abc import Awaitable
from typing import Any, Callable, Coroutine

def sleep(seconds: float) -> Awaitable[None]: ...
def sleep_ms(ms: int) -> Awaitable[None]: ...
def run(
    main: Callable[..., Any] | Coroutine[Any, Any, None], *args: Any, **kwargs: Any
) -> Any: ...
def gather(*coros: Awaitable[Any]) -> Awaitable[Any]: ...
def get_event_loop() -> Any: ...
def create_task(coro: Awaitable[Any]) -> Any: ...
