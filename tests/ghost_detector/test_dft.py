from math import sin

from ghost_detector.ghost_detector_logic import GhostDetector


def test_dft() -> None:
    domain = range(32)
    samples = [
        (
            sin(6.28 * index / len(domain))
            + sin(6.28 * 2 * index / len(domain))
            + sin(6.28 * 3 * index / len(domain))
        )
        for index in domain
    ]
    dft = GhostDetector.perform_r_dft(samples)

    assert dft == [
        0.0,
        -1.7895115484236734e-05,
        -3.147574366706737e-05,
        -3.780278887311004e-05,
        -3.619260155336202e-05,
        -2.8294779838261347e-05,
        -1.736455631930374e-05,
        -7.027899415081338e-06,
        -1.9609098295588424e-08,
        2.6323020333641507e-06,
        1.6945001345823634e-06,
        -8.935404674284881e-07,
        -3.04662561489272e-06,
        -3.504020278683015e-06,
        -2.3174968708132094e-06,
        -6.508940853792349e-07,
        1.956378502507897e-09,
        -1.2037669327903547e-06,
        -3.7942044769740876e-06,
        -6.0254388403471965e-06,
        -5.767548873963045e-06,
        -1.961619519454878e-06,
        3.9284828769317116e-06,
        7.160405535031109e-06,
        1.8368339005522684e-07,
        -2.553650076548742e-05,
        -7.672976455168779e-05,
        -0.0001553939434792205,
        -0.00025675164908971204,
        -0.0003689527681362331,
        -0.00047490046847028784,
        -0.0005559074514720082,
    ]
